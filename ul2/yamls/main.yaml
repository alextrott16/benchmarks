data_remote: &data_remote ./my-copy-c4
data_local: &data_local ./my-copy-c4
tokenizer_name: &tokenizer_name t5-base
max_seq_len: &max_seq_len 512
mixture_of_denoisers: &mixture_of_denoisers
  span_mean_lengths_and_ratios: 
    - [ 3, .15] # [R]
    - [ 8, .15] # [R]
    - [ 3, .50] # [X]
    - [ 8, .50] # [X]
    - [64, .15] # [X]
    - [64, .50] # [X]
  sequence_mask_ratios: 0.25 # [S]

# Run Name
run_name: t5-base--ul2--from-scratch

# Model
model:
  name: hf_t5
  use_pretrained: false # Train the model from scratch. Set to true to start from the HF off-the-shelf weights.
  pretrained_model_name: *tokenizer_name
  tokenizer_name: *tokenizer_name

# Dataloaders
train_loader:
  name: c4
  dataset:
    remote: *data_remote
    local: *data_local
    split: train
    tokenizer_name: *tokenizer_name
    max_seq_len: *max_seq_len
    group_method: concat
    prefetch: 1000
    shuffle: true
  mixture_of_denoisers: *mixture_of_denoisers
  drop_last: true
  num_workers: 0
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: false
  timeout: 0

eval_loader:
  name: c4
  dataset:
    remote: *data_remote
    local: *data_local
    split: val
    tokenizer_name: *tokenizer_name
    max_seq_len: *max_seq_len
    group_method: concat
    prefetch: 1000
    shuffle: false
  mixture_of_denoisers: *mixture_of_denoisers
  drop_last: false
  num_workers: 0
  pin_memory: true
  prefetch_factor: 2
  persistent_workers: false
  timeout: 0

global_train_batch_size: 128

# Optimization
scheduler:
  name: linear_decay_with_warmup # UL2 paper calls for inverse square root scheduler
  t_warmup: 0.06dur # Warmup to the full LR for 6% of the training duration
  alpha_f: 0.02 # Linearly decay to 0.02x the full LR by the end of the training duration

optimizer:
  name: decoupled_adamw # UL2 paper calls for Adafactor w/ unknown HPs
  lr: 5.0e-4 # Peak learning rate
  betas:
    - 0.9
    - 0.98
  eps: 1.0e-06
  weight_decay: 1.0e-5 # Amount of weight decay regularization

grad_clip_norm: -1.0

# Training duration and evaluation frequency
max_duration: 500000ba
eval_interval: 1000ba

# Checkpoint to local filesystem or remote object store
save_interval: 10000ba
save_num_checkpoints_to_keep: 1  # Important, this cleans up checkpoints saved to DISK
save_folder: null # e.g. './{run_name}/ckpt' (local) or 's3://mybucket/mydir/{run_name}/ckpt' (remote)

# System
seed: 17
grad_accum: auto
precision: bf16

# Logging
progress_bar: true
log_to_console: false

loggers:
  wandb: {}

callbacks:
  speed_monitor:
    window_size: 500
  lr_monitor: {}
  mod_printer:
    print_frequency: 100
    max_length: *max_seq_len
    tokenizer_name: *tokenizer_name
